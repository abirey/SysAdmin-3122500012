
# B. Containerized Web Server Using Docker

Apa itu docker?, apakah docker sama dengan VMBOX?. Secara fungsi hampir sama tetapi tidak sama, jadi docker menjalankan aplikasi contohnya **MicroService** yang dimana dipecah menjadi kecil kecil kedalam sebuah container!, lalu apa bedanya jika menggunakan vmbox?,

Vmbox biasanya digunakan oleh sebuah aplikasi yang menjunjung tinggi sdlc Agile karena setiap satu vmbox menyimpan satu Server misal Vmbox A sebagai server nginx, lalu VMBOX B sebagai Server Database dst..

Jika menggunakan SDLC DEVOPS Kebanyakan aplikasi telah menjadi MicroService yaitu dipecah menjadi container itu tadi

**Lalu apa saja Container Engine yang ada?**

Ada banyak seperti

Docker, Salad, Ambassador, Red Hat Openshift dll


Oleh karenanya mari kita coba melakukan Kontainersiasi Virtual Box :D


#### A. Pemasang Docker di Debian vmBox

1. Hapus Docker.io dan dependency bawaan dari *DEBIAN!*, lakukan seperti command berikut!

        for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done

2. Lakukan Update/Upgrade Repository dan tambahkan Docker Official GPG Keys

        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

3. Tambahkan Repository Apt Resources

        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

4. Install DOCKER OFFICIAL PACKAGE

        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

5. Docker Sudah Terpasang :D !, Yuk coba jalankan Hello World

        sudo docker run hello-world

    or

        sudo docker pull hello-world && docker run hello-world


    Sum



### Membuat Docker Image

1. Buat File dengan Konfigurasi Berikut Buat file bernama **Dockerfile**

    > Dockerfile

        from nginx:alpine

        COPY index.html /usr/share/nginx/html
        EXPOSE 80

        CMD ["nginx", "-g", "daemon off;"]


2. Build Ke dalam Docker **IMAGES**

            sudo docker build -t contoh .


    Jalankan Docker dengan Perintah

3. Jalankan **DOCKER IMAGES**

        sudo docker run -d -p 80:80 contoh


4. Berhasil!, akses port 80


# C. Apache2 + Dns Resolver + Docker Uptime Kuma Package

Sekarang kita akan coba buka salah satu running server dengan dns yang diresolve oleh named/bind9 kemudian kita gunakan apache2 untuk web servernya :D

1. Git Clone Uptime Kuma dahulu

        git clone https://github.com/louislam/uptime-kuma.git

        cd uptime-kuma

2. lalu Jalankan dengan cara berikut

        sudo docker compose up

    yang dimana akan melakukan eksekusi file compose.yaml

    cek running container

        sudo docker ps -a

    pastikan berjalan

3. kita cek pada port berjalan yaitu **3001**

    `localhost:3001`


### Lalu Bagaimana jika menggunakan url `monitoring.kelompok2.local` ?

1. Konfigurasi file **/var/lib/bind/db.kelompok2.local**

    Tambahkan monitoring pada CNAME ns
    dan jangan lupa ubah version file + date


    `sudo sytemctl restart named`

2. Untuk melakukan pointing ke domain localhost kita, kita gunakan ReverseProxy pada Apache2 Kita ( a2enmod )

    Install Beberapa Package Berikut dengan menjalankan perintah berikut:

    `sudo a2enmod`

    Masukkan Package berikut
    `proxy proxy_ajp proxy_http rewrite deflate headers proxy_balancer proxy_connect proxy_html`


3. Setelah itu kita lakukan Konfigurasi pada Apache2 Kita

    > /etc/apache2/sites-enabled/000-default.conf


    Tambahkan baris berikut untuk monitoring subdomain


    `sudo sytemctl restart apache2`

4. Cek pada web browser kita dan berahasil



